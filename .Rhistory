devtools::document()
devtools::check()
devtools::install_github("Chuanping-Zhao/ZCPstates")
test=ZCPstates::getHPP()
getwd()
View(test)
View(test[["Data"]])
devtools::document()
devtools::install_github("Chuanping-Zhao/ZCPstates")
getwd()
dest_dir =getwd()
technology=c("immunoassay","ms")[2]
verbose = TRUE
technology =match.arg(technology, choices = c("ms", "immunoassay"))
#url
url =switch(technology,
ms = "https://www.proteinatlas.org/download/tsv/blood_ms_concentration.tsv.zip",
immunoassay = "https://www.proteinatlas.org/download/tsv/blood_immunoassay_concentration.tsv.zip")
zip_name = paste0("blood_", technology, "_concentration.tsv.zip")
zip_path = file.path(dest_dir, zip_name)
if (verbose) message("Downloading data from HPA...--zcp")
tryCatch({
invisible(capture.output(
download.file(url, destfile = zip_path, mode = "wb", quiet = TRUE)
))
}, error = function(e) {
stop("Download failed. Please check your internet connection or the URL.--zcp")
})
if (verbose) message("ðŸ“¦ Unzipping file...--zcp")
unzipped_files = unzip(zip_path, exdir = dest_dir)
unzipped_files
tsv_file = grep("\\.tsv$", unzipped_files, value = TRUE)
tsv_file
tsv_file = file.path(dest_dir, tsv_file)
tsv_file
if (length(tsv_file) == 0) stop("No new .tsv file found after unzip.--zcp")
if(technology=="ms"){
HPP =data.table::fread(tsv_file[1])
HPP[,Technology:=technology]
conc_col= grep("^Conc", names(HPP), value = TRUE,ignore.case = TRUE)
HPP[, Abundance := log2(as.numeric(get(conc_col)))]
data.table::setnames(HPP, old = conc_col, new = "Conc_pg_per_L")
HPP = HPP[order(-Abundance)][, order := .I]#  "Gene","ENSG ID","Conc [pg/L]", "Technology", "Abundance","order"
}else{
HPP =data.table::fread(tsv_file[1])
data.table::setnames(x = HPP,old = c("gene"),new = c("Gene"))
HPP[,Technology:=technology]
conc_col= grep("^Conc", names(HPP), value = TRUE,ignore.case = TRUE)
HPP[, Abundance := log2(as.numeric(get(conc_col)))]
data.table::setnames(HPP, old = conc_col, new = "Conc_pg_per_L")
HPP = HPP[order(-Abundance)][, order := .I]
}
technology =match.arg(technology, choices = c("ms", "immunoassay"))
#url
url =switch(technology,
ms = "https://www.proteinatlas.org/download/tsv/blood_ms_concentration.tsv.zip",
immunoassay = "https://www.proteinatlas.org/download/tsv/blood_immunoassay_concentration.tsv.zip")
zip_name = paste0("blood_", technology, "_concentration.tsv.zip")
zip_path = file.path(dest_dir, zip_name)
if (verbose) message("Downloading data from HPA...--zcp")
tryCatch({
invisible(capture.output(
download.file(url, destfile = zip_path, mode = "wb", quiet = TRUE)
))
}, error = function(e) {
stop("Download failed. Please check your internet connection or the URL.--zcp")
})
if (verbose) message("ðŸ“¦ Unzipping file...--zcp")
existing_tsv = list.files(dest_dir, pattern = "\\.tsv$", full.names = TRUE)
unzip(zip_path, exdir = dest_dir)
all_tsv = list.files(dest_dir, pattern = "\\.tsv$", full.names = TRUE)
tsv_file =setdiff(all_tsv, existing_tsv)
if (length(tsv_file) == 0) stop("No new .tsv file found after unzip.--zcp")
if(technology=="ms"){
HPP =data.table::fread(tsv_file[1])
HPP[,Technology:=technology]
conc_col= grep("^Conc", names(HPP), value = TRUE,ignore.case = TRUE)
HPP[, Abundance := log2(as.numeric(get(conc_col)))]
data.table::setnames(HPP, old = conc_col, new = "Conc_pg_per_L")
HPP = HPP[order(-Abundance)][, order := .I]#  "Gene","ENSG ID","Conc [pg/L]", "Technology", "Abundance","order"
}else{
HPP =data.table::fread(tsv_file[1])
data.table::setnames(x = HPP,old = c("gene"),new = c("Gene"))
HPP[,Technology:=technology]
conc_col= grep("^Conc", names(HPP), value = TRUE,ignore.case = TRUE)
HPP[, Abundance := log2(as.numeric(get(conc_col)))]
data.table::setnames(HPP, old = conc_col, new = "Conc_pg_per_L")
HPP = HPP[order(-Abundance)][, order := .I]
}
existing_tsv = list.files(dest_dir, pattern = "\\.tsv$", full.names = TRUE)
unzip(zip_path, exdir = dest_dir)
all_tsv = list.files(dest_dir, pattern = "\\.tsv$", full.names = TRUE)
tsv_file =setdiff(all_tsv, existing_tsv)
tsv_file
technology =match.arg(technology, choices = c("ms", "immunoassay"))
#url
url =switch(technology,
ms = "https://www.proteinatlas.org/download/tsv/blood_ms_concentration.tsv.zip",
immunoassay = "https://www.proteinatlas.org/download/tsv/blood_immunoassay_concentration.tsv.zip")
zip_name = paste0("blood_", technology, "_concentration.tsv.zip")
zip_path = file.path(dest_dir, zip_name)
if (verbose) message("Downloading data from HPA...--zcp")
tryCatch({
invisible(capture.output(
download.file(url, destfile = zip_path, mode = "wb", quiet = TRUE)
))
}, error = function(e) {
stop("Download failed. Please check your internet connection or the URL.--zcp")
})
if (verbose) message("ðŸ“¦ Unzipping file...--zcp")
existing_tsv = list.files(dest_dir, pattern = "\\.tsv$", full.names = TRUE)
unzip(zip_path, exdir = dest_dir)
all_tsv = list.files(dest_dir, pattern = "\\.tsv$", full.names = TRUE)
tsv_file =setdiff(all_tsv, existing_tsv)
if (length(tsv_file) == 0) stop("No new .tsv file found after unzip.--zcp")
if(technology=="ms"){
HPP =data.table::fread(tsv_file[1])
HPP[,Technology:=technology]
conc_col= grep("^Conc", names(HPP), value = TRUE,ignore.case = TRUE)
HPP[, Abundance := log2(as.numeric(get(conc_col)))]
data.table::setnames(HPP, old = conc_col, new = "Conc_pg_per_L")
HPP = HPP[order(-Abundance)][, order := .I]#  "Gene","ENSG ID","Conc [pg/L]", "Technology", "Abundance","order"
}else{
HPP =data.table::fread(tsv_file[1])
data.table::setnames(x = HPP,old = c("gene"),new = c("Gene"))
HPP[,Technology:=technology]
conc_col= grep("^Conc", names(HPP), value = TRUE,ignore.case = TRUE)
HPP[, Abundance := log2(as.numeric(get(conc_col)))]
data.table::setnames(HPP, old = conc_col, new = "Conc_pg_per_L")
HPP = HPP[order(-Abundance)][, order := .I]
}
View(HPP)
devtools::document()
devtools::install_github("Chuanping-Zhao/ZCPstates")
devtools::install_github("Chuanping-Zhao/ZCPstates")
devtools::document()
devtools::check()
devtools::install_github("Chuanping-Zhao/ZCPstates")
library(ZCPstates)
?easyHPPrank()
devtools::document()
devtools::check()
devtools::install_github("Chuanping-Zhao/ZCPstates")
ls("package:ZCPstates")
ls("package:ZCPstates")
library(ZCPstates)
ls("package:ZCPstates")
easypca
?easypca
devtools::document()
devtools::check()
devtools::install_github("Chuanping-Zhao/ZCPstates")
