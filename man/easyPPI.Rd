% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/easyPPI.R
\name{easyPPI}
\alias{easyPPI}
\title{Generate Protein-Protein Interaction (PPI) Network Report}
\usage{
easyPPI(
  dt,
  proteincol.id = "Accessions",
  sep.pattern = ";\\\\s*",
  score_threshold = 400,
  savepath = "report",
  protein_aliases_path,
  protein_Info_path,
  protein_link_path
)
}
\arguments{
\item{dt}{A data.frame containing protein identifiers. The column specified by \code{proteincol.id} is used.}

\item{proteincol.id}{A character string indicating the column name in \code{dt} that contains the protein IDs.
Default is "Accessions".}

\item{sep.pattern}{A regular expression used to separate multiple protein IDs in the column defined by \code{proteincol.id}.
Default is ";\\s*".}

\item{score_threshold}{An integer specifying the minimum combined score for filtering PPI interactions. Default is 400.}

\item{savepath}{A character string specifying the directory where the output files (report and plots) will be saved.
Default is "report".}

\item{protein_aliases_path}{A character string specifying the local file path for the protein aliases file.
This parameter is required.}

\item{protein_Info_path}{A character string specifying the local file path for the protein information file.
This parameter is required.}

\item{protein_link_path}{A character string specifying the local file path for the protein link file.
This parameter is required.}
}
\value{
A list with the following components:
\item{id_map}{A data.table containing the mapping result (with protein alias and additional information).}
\item{ppi_protein_data}{A data.table of protein-level PPI interactions with columns renamed to \code{From} and \code{To}.}
\item{ppi_gene_data}{A data.table of gene-level PPI interactions with columns renamed to \code{From} and \code{To}.}
\item{plt_ppi_protein}{A ggraph object representing the protein-level PPI network plot.}
\item{plt_ppi_gene}{A ggraph object representing the gene-level PPI network plot.}
}
\description{
This function processes input protein data, maps protein IDs using the provided local files,
generates PPI networks (both at protein and gene levels), saves intermediate files and network plots,
and returns a list containing the mapping result and network data.
}
\details{
The function performs the following steps:
\enumerate{
\item Checks whether \code{protein_aliases_path}, \code{protein_Info_path} and \code{protein_link_path} are provided.
If any of these are missing, it throws an error with an appropriate message.
\item Reads the local files using \code{data.table::fread} to obtain protein aliases, protein information, and PPI links.
\item Processes the input data (\code{dt}) by separating multiple protein IDs based on the provided delimiter.
\item Maps protein IDs to obtain corresponding aliases and merges with protein information (keeping only the first occurrence for duplicates).
\item Filters the PPI network based on the score threshold and replaces string IDs with protein aliases or gene names.
\item Rescales the combined scores and generates network plots using \code{igraph} and \code{ggraph}.
\item Saves the intermediate mapping table and interaction data, as well as the generated plots, to the specified output directory.
}
}
\examples{
\dontrun{
demo <- data.frame(
  Accessions = c("P01042", "P07911", "P02760", "Q08380", "O14686")
)

result <- easyPPI(
  dt = demo,
  proteincol.id = "Accessions",
  sep.pattern = ";\\\\s*",
  score_threshold = 400,
  savepath = "report",
  protein_aliases_path = "9606.protein.aliases.v12.0.txt.gz",
  protein_Info_path = "9606.protein.info.v12.0.txt.gz",
  protein_link_path = "9606.protein.links.v12.0.txt.gz"
)
}

}
