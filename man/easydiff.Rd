% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/easydiff.R
\name{easydiff}
\alias{easydiff}
\title{Differential Expression Analysis Using Linear Models}
\usage{
easydiff(exp_matrix, contrast.matrix, groups, sample_info = NULL, log_base = 2)
}
\arguments{
\item{exp_matrix}{A numeric matrix of expression values with proteins as rows and samples as columns.
\strong{Note:} The data must be log2-transformed. Row names should represent protein identifiers, and column names
represent sample (RUN) names.}

\item{contrast.matrix}{A numeric matrix specifying the contrasts for comparisons. The column names must match the unique
group names provided in \code{groups}. Each row of the contrast matrix defines one comparison.}

\item{groups}{A character vector indicating the group label for each column in \code{exp_matrix}. Its length must be equal
to the number of columns in \code{exp_matrix}.}

\item{sample_info}{Optional. A \code{data.table} containing sample metadata. It must have at least the following columns:
\itemize{
\item \code{RUN}: Sample or run identifier (should match the column names of \code{exp_matrix}).
\item \code{GROUP}: Group label for each sample.
\item \code{SUBJECT}: Identifier for the biological sample. If technical replicates exist (multiple RUNs for the same SUBJECT),
a mixed-effects model should be used with SUBJECT as a random effect. Otherwise, default is each sample is independent.
}
If not provided, a default \code{sample_info} is generated assuming each sample is an independent subject.}

\item{log_base}{Numeric. The base of the logarithm used for labeling fold change output. The default is \code{2},
meaning that fold changes are reported on the log2 scale.}
}
\value{
A list with three elements:
\describe{
\item{\code{ComparisonResult}}{A \code{data.frame} containing the differential expression results for each protein and contrast.
Columns include: \code{Protein}, \code{Label} (contrast label), fold change (named as \code{log2FC} if \code{log_base} is 2),
standard error (\code{SE}), t-value (\code{Tvalue}), degrees of freedom (\code{DF}), raw p-value (\code{pvalue}),
and Benjamini-Hochberg adjusted p-value (\code{adj.pvalue}). An \code{issue} column records any problems encountered
(e.g. insufficient data).}
\item{\code{ModelQC}}{A \code{data.frame} containing quality control metrics for each protein, including the number of
measurements, missing percentage, and residuals from the fitted model. An \code{ImputationPercentage} column is also included
(set to 0 since no imputation is performed).}
\item{\code{FittedModel}}{A list of fitted model objects for each protein, which can be inspected further if needed.}
}
}
\description{
This function performs differential expression analysis at the protein level using linear models.
It takes as input a log2-transformed expression matrix, a contrast matrix defining the comparisons of
interest, and group information for each sample. Optionally, a sample metadata table (\code{sample_info})
can be provided to specify additional information (e.g. SUBJECT identifiers). If missing, the function
automatically generates one assuming that each sample is from a unique biological individual.
}
\details{
\strong{Important:} The expression matrix (\code{exp_matrix}) must be log2-transformed before input. This ensures
that the model assumptions are met and that the computed model coefficients directly represent log2-scaled values,
so that the difference (fold change) between groups is computed on the log2 scale.

The function fits a model of the form \code{lm(ABUNDANCE ~ 0 + GROUP)} for each protein, meaning that each
groupâ€™s coefficient corresponds directly to the mean log2 abundance in that group. Then, using the provided
contrast matrix, it computes the log2 fold change (logFC), standard error (SE), t-statistic (Tvalue), degrees of freedom (DF),
and p-value for each contrast. Missing values are omitted (no imputation is performed). In cases where a protein does not
have measurements in at least two groups, the function flags this with an appropriate issue message.

The function performs the following steps:
\enumerate{
\item Validates that \code{exp_matrix}, \code{contrast.matrix}, and \code{groups} are provided and consistent.
\item If \code{sample_info} is not provided, it automatically generates sample metadata with each sample treated as an independent subject.
\item Converts the expression matrix into long format and merges it with the sample metadata.
\item For each protein, it fits a linear model \code{lm(ABUNDANCE ~ 0 + GROUP)}. In this model, the estimated coefficient
for each group is the mean log2 abundance in that group.
\item Using the provided contrast matrix, the function calculates for each contrast the log2 fold change, its standard error,
t-statistic, degrees of freedom, and p-value.
\item P-values are adjusted using the Benjamini-Hochberg method.
}

All external functions are imported using \code{\link[=importFrom]{importFrom}}. Specifically, the following functions are used:
\itemize{
\item \code{data.table::data.table}
\item \code{data.table::melt}
\item \code{data.table::rbindlist}
\item \code{data.table::setnames}
\item \code{data.table::as.data.table}
\item \code{stats::lm}
\item \code{stats::coef}
\item \code{stats::vcov}
\item \code{stats::residuals}
\item \code{stats::fitted}
\item \code{stats::pt}
\item \code{stats::p.adjust}
}
}
\examples{
\dontrun{
#demo
set.seed(123)
exp_matrix <- matrix(rnorm(30), nrow = 2,
                     dimnames = list(c("Prot1", "Prot2"), paste0("S", 1:15)))

log2_exp_matrix <- log2(exp_matrix + 1)
groups <- c(rep("health", 5), rep("diseae", 5), rep("Post", 5))
sample_info <- data.table::data.table(
  RUN = colnames(log2_exp_matrix),
  GROUP = groups,
  SUBJECT = paste0("Subject", 1:15)
)

# contrast
contrast.matrix <- rbind(
  "Post/health" = c(health = -1, diseae = 0, Post = 1),
  "diseae/health" = c(health = -1, diseae = 1, Post = 0),
  "Post/diseae" = c(health = 0, diseae = -1, Post = 1)
)

# diff analysis
result <- easydiff(log2_exp_matrix, contrast.matrix, groups, sample_info)

head(result$ComparisonResult)# diff result
head(result$ModelQC)# model
result$FittedModel$Prot1 # protein 1
}

}
